// deno-fmt-ignore-file
import { u32 } from "../types.ts";
import {
  ArrayOrder,
  BitmapOrder,
  PackedLayout,
  PackedOrder,
  PixelType
} from "./enums.ts";

function SDL_DEFINE_PIXELFORMAT(
  type: number,
  order: number,
  layout: number,
  bits: number,
  bytes: number,
): number {
  return ((1 << 28) | ((type) << 24) | ((order) << 20) |
    ((layout) << 16) | ((bits) << 8) | ((bytes) << 0));
}

export const PIXELFORMAT_UNKNOWN: u32 = 0;
export const PIXELFORMAT_INDEX1LSB: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.INDEX1, BitmapOrder._4321, 0, 1, 0);
export const PIXELFORMAT_INDEX1MSB: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.INDEX1, BitmapOrder._1234, 0, 1, 0);
export const PIXELFORMAT_INDEX4LSB: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.INDEX4, BitmapOrder._4321, 0, 4, 0);
export const PIXELFORMAT_INDEX4MSB: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.INDEX4, BitmapOrder._1234, 0, 4, 0);
export const PIXELFORMAT_INDEX8: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.INDEX8, 0, 0, 8, 1);
export const PIXELFORMAT_RGB332: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED8, PackedOrder.XRGB, PackedLayout._332, 8, 1);
export const PIXELFORMAT_XRGB4444: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED16, PackedOrder.XRGB, PackedLayout._4444, 12, 2);
export const PIXELFORMAT_RGB444: u32 = PIXELFORMAT_XRGB4444;
export const PIXELFORMAT_XBGR4444: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED16, PackedOrder.XBGR, PackedLayout._4444, 12, 2);
export const PIXELFORMAT_BGR444: u32 = PIXELFORMAT_XBGR4444;
export const PIXELFORMAT_XRGB1555: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED16, PackedOrder.XRGB, PackedLayout._1555, 15, 2);
export const PIXELFORMAT_RGB555: u32 = PIXELFORMAT_XRGB1555;
export const PIXELFORMAT_XBGR1555: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED16, PackedOrder.XBGR, PackedLayout._1555, 15, 2);
export const PIXELFORMAT_BGR555: u32 = PIXELFORMAT_XBGR1555;
export const PIXELFORMAT_ARGB4444: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED16, PackedOrder.ARGB, PackedLayout._4444, 16, 2);
export const PIXELFORMAT_RGBA4444: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED16, PackedOrder.RGBA, PackedLayout._4444, 16, 2);
export const PIXELFORMAT_ABGR4444: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED16, PackedOrder.ABGR, PackedLayout._4444, 16, 2);
export const PIXELFORMAT_BGRA4444: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED16, PackedOrder.BGRA, PackedLayout._4444, 16, 2);
export const PIXELFORMAT_ARGB1555: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED16, PackedOrder.ARGB, PackedLayout._1555, 16, 2);
export const PIXELFORMAT_RGBA5551: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED16, PackedOrder.RGBA, PackedLayout._5551, 16, 2);
export const PIXELFORMAT_ABGR1555: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED16, PackedOrder.ABGR, PackedLayout._1555, 16, 2);
export const PIXELFORMAT_BGRA5551: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED16, PackedOrder.BGRA, PackedLayout._5551, 16, 2);
export const PIXELFORMAT_RGB565: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED16, PackedOrder.XRGB, PackedLayout._565, 16, 2);
export const PIXELFORMAT_BGR565: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED16, PackedOrder.XBGR, PackedLayout._565, 16, 2);
export const PIXELFORMAT_RGB24: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.ARRAYU8, ArrayOrder.RGB, 0, 24, 3);
export const PIXELFORMAT_BGR24: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.ARRAYU8, ArrayOrder.BGR, 0, 24, 3);
export const PIXELFORMAT_XRGB8888: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED32, PackedOrder.XRGB, PackedLayout._8888, 24, 4);
export const PIXELFORMAT_RGB888: u32 = PIXELFORMAT_XRGB8888;
export const PIXELFORMAT_RGBX8888: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED32, PackedOrder.RGBX, PackedLayout._8888, 24, 4);
export const PIXELFORMAT_XBGR8888: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED32, PackedOrder.XBGR, PackedLayout._8888, 24, 4);
export const PIXELFORMAT_BGR888: u32 = PIXELFORMAT_XBGR8888;
export const PIXELFORMAT_BGRX8888: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED32, PackedOrder.BGRX, PackedLayout._8888, 24, 4);
export const PIXELFORMAT_ARGB8888: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED32, PackedOrder.ARGB, PackedLayout._8888, 32, 4);
export const PIXELFORMAT_RGBA8888: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED32, PackedOrder.RGBA, PackedLayout._8888, 32, 4);
export const PIXELFORMAT_ABGR8888: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED32, PackedOrder.ABGR, PackedLayout._8888, 32, 4);
export const PIXELFORMAT_BGRA8888: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED32, PackedOrder.BGRA, PackedLayout._8888, 32, 4);
export const PIXELFORMAT_ARGB2101010: u32 = SDL_DEFINE_PIXELFORMAT(PixelType.PACKED32, PackedOrder.ARGB, PackedLayout._2101010, 32, 4);
/*
#if SDL_BYTEORDER == SDL_BIG_ENDIAN
  SDL_PIXELFORMAT_RGBA32 = SDL_PIXELFORMAT_RGBA8888,
  SDL_PIXELFORMAT_ARGB32 = SDL_PIXELFORMAT_ARGB8888,
  SDL_PIXELFORMAT_BGRA32 = SDL_PIXELFORMAT_BGRA8888,
  SDL_PIXELFORMAT_ABGR32 = SDL_PIXELFORMAT_ABGR8888,
#else
  SDL_PIXELFORMAT_RGBA32 = SDL_PIXELFORMAT_ABGR8888,
  SDL_PIXELFORMAT_ARGB32 = SDL_PIXELFORMAT_BGRA8888,
  SDL_PIXELFORMAT_BGRA32 = SDL_PIXELFORMAT_ARGB8888,
  SDL_PIXELFORMAT_ABGR32 = SDL_PIXELFORMAT_RGBA8888,
#endif

  SDL_PIXELFORMAT_YV12 =
      SDL_DEFINE_PIXELFOURCC('Y', 'V', '1', '2'),
  SDL_PIXELFORMAT_IYUV =
      SDL_DEFINE_PIXELFOURCC('I', 'Y', 'U', 'V'),
  SDL_PIXELFORMAT_YUY2 =
      SDL_DEFINE_PIXELFOURCC('Y', 'U', 'Y', '2'),
  SDL_PIXELFORMAT_UYVY =
      SDL_DEFINE_PIXELFOURCC('U', 'Y', 'V', 'Y'),
  SDL_PIXELFORMAT_YVYU =
      SDL_DEFINE_PIXELFOURCC('Y', 'V', 'Y', 'U'),
  SDL_PIXELFORMAT_NV12 =
      SDL_DEFINE_PIXELFOURCC('N', 'V', '1', '2'),
  SDL_PIXELFORMAT_NV21 =
      SDL_DEFINE_PIXELFOURCC('N', 'V', '2', '1'),
  SDL_PIXELFORMAT_EXTERNAL_OES =
      SDL_DEFINE_PIXELFOURCC('O', 'E', 'S', ' ')
*/
